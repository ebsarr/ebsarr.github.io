<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on btaars.net</title>
    <link>https://blog.btaars.net/post/</link>
    <description>Recent content in Posts on btaars.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Aug 2019 23:53:59 +0900</lastBuildDate>
    <atom:link href="/post/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Function parameters in golang</title>
      <link>https://blog.btaars.net/post/function-parameters-in-golang/</link>
      <pubDate>Wed, 28 Aug 2019 23:53:59 +0900</pubDate>
      
      <guid>https://blog.btaars.net/post/function-parameters-in-golang/</guid>
      <description>Today I want to share a simple concept that I found useful when writing functions in go. Before jumping in, I want to talk about context to better illustrate the use case. A couple of years ago, I developed a simple CLI tool to interact with packet cloud using their go SDK . As you may guess, the CLI tool had to implement all the major operations/functions provided by the cloud, meaning create, start, stop servers, manage the network environment etc &amp;hellip; The first step was to create a function for each operation, and each function would define the options and parameters that would be submitted to the corresponding packet API.</description>
    </item>
    
    <item>
      <title>Shell scripting tips</title>
      <link>https://blog.btaars.net/post/shell-scripting-tips/</link>
      <pubDate>Sun, 03 Mar 2019 17:23:47 +0900</pubDate>
      
      <guid>https://blog.btaars.net/post/shell-scripting-tips/</guid>
      <description>It&amp;rsquo;s been a while since the last time I wrote a shell script. A few years ago I had to automate many tasks for managing thousands of servers. This made me write many scripts for many purposes, like running a sanity check on a set of clusters, collecting and analysing logs or automating deployment of configurations across a set of hundreds of servers. I ended up with many tools at hand, and needed a way to productively write new tools, and also reuse the codes common to all the scripts etc &amp;hellip; In this post I will share the few practices that I applied when writing my scripts.</description>
    </item>
    
    <item>
      <title>Getting Started with the aliyun CLI</title>
      <link>https://blog.btaars.net/post/getting-started-with-aliyuncli/</link>
      <pubDate>Sat, 02 Mar 2019 17:21:59 +0900</pubDate>
      
      <guid>https://blog.btaars.net/post/getting-started-with-aliyuncli/</guid>
      <description>In the previous post, I discussed about backup and restore of cloud disks on Alibaba Cloud. For illustration purpose, I used the aliyun command line interface, but then realized that I haven&amp;rsquo;t described how to get started with the CLI tool. In this post, I will describe all the steps needed to properly setup and use the CLI.
Prerequisites Before moving to the CLI topic, I will spend some time to talk about the Alibaba Cloud account and RAM service.</description>
    </item>
    
    <item>
      <title>Alibaba Cloud - Cloud Disks Backup and Restore</title>
      <link>https://blog.btaars.net/post/aliyun-backup-and-restore/</link>
      <pubDate>Sun, 24 Feb 2019 18:36:00 +0900</pubDate>
      
      <guid>https://blog.btaars.net/post/aliyun-backup-and-restore/</guid>
      <description>Creating virtual machines on the cloud, regardless of the platform is pretty easy. It is made so easy that you might jump in and fire machines without prior planning. The advantage of the cloud is that you can get started without worrying about initial costs, and scale as needed as your business grows. But this does not mean that you don&amp;rsquo;t have to plan before getting stared. Each Cloud Provider has its own way of providing management features for their products.</description>
    </item>
    
    <item>
      <title>Work-life balance</title>
      <link>https://blog.btaars.net/post/work-life-balance/</link>
      <pubDate>Sat, 02 Feb 2019 21:36:00 +0900</pubDate>
      
      <guid>https://blog.btaars.net/post/work-life-balance/</guid>
      <description>The past year has been a very agitated year in my career. Looking back at all the things that went or still going on, I want to take a stop and ask to myself, what am I doing? And most importantly, where am I going ? I made many mistakes, but the biggest one being that I have thought about everything but myself.
Looking back Two years ago I started managing a team to work on complicated projects involving cross collaboration with other companies.</description>
    </item>
    
    <item>
      <title>Introducing petitdb</title>
      <link>https://blog.btaars.net/post/introducing-petitdb/</link>
      <pubDate>Mon, 26 Mar 2018 00:14:07 +0900</pubDate>
      
      <guid>https://blog.btaars.net/post/introducing-petitdb/</guid>
      <description>What is petitdb petitdb is a python library that I created a few years ago. As you can guess by the name, it&amp;rsquo;s a library that provides some basic database functionnalities. Under the hood it&amp;rsquo;s just operating on shelves, inside which dicts of dicts are created. Each dict in the shelve is presented as a table, and inside each dict resides another dict that stores key/value pairs.
Use cases One way I used this library was to store some configurations, mainly hostnames and some others attributes that go with it.</description>
    </item>
    
    <item>
      <title>About logs</title>
      <link>https://blog.btaars.net/post/about_logging/</link>
      <pubDate>Tue, 05 Dec 2017 01:23:06 +0900</pubDate>
      
      <guid>https://blog.btaars.net/post/about_logging/</guid>
      <description>I was looking for an article online that explains clearly how to idiomatically do logging in golang. What is the best practice? This is the article that I found by googling golang logging. It turned out not to be how-to article, but rather an opinion about what should developers log when writing their applications. Here are some thoughts about the article. I agree with some of the author&amp;rsquo;s opinions while I don&amp;rsquo;t with others.</description>
    </item>
    
    <item>
      <title>Creating this blog with Hugo &amp; Github Pages</title>
      <link>https://blog.btaars.net/post/creating-this-blog/</link>
      <pubDate>Wed, 11 Jan 2017 00:14:07 +0900</pubDate>
      
      <guid>https://blog.btaars.net/post/creating-this-blog/</guid>
      <description>I had time during the new year holidays, so I went online to look for a web framework to develop web applications in golang. I accidently lended on the hugo site and discovered this awesome tool. The concept is very simple: you can easily generate a static website in a few minutes. This was quite different from what I was looking for, but it looked interesting and I decided to give it a try.</description>
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>https://blog.btaars.net/post/first/</link>
      <pubDate>Mon, 09 Jan 2017 20:06:19 +0900</pubDate>
      
      <guid>https://blog.btaars.net/post/first/</guid>
      <description>$ printf &amp;quot;%s\n&amp;quot; &#39;Hello, World!&#39; Hello, World!  I&amp;rsquo;m starting a fresh blog site and this is my first post. I&amp;rsquo;ll try my best to post frequently and keep the site alive. A brief introduction I&amp;rsquo;ve been living in Japan for a very long time. I currently work in a Japanese company (been working there for more than a decade now). In the beginning, I&amp;rsquo;ve had the chance to work as a technical support staff for one year.</description>
    </item>
    
  </channel>
</rss>
